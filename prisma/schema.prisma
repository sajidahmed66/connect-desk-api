generator client {
  provider = "prisma-client-js" 
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserType {
  ADMIN
  ClIENT
  BUSIINESS
}


model Package {
  id         Int      @id @default(autoincrement())
  name       String
  featues    String[]
  cost       Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Faq {
  id         Int      @id @default(autoincrement())
  question   String
  answer     String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String
  user_type  UserType
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Blog {
  id              Int      @id @default(autoincrement())
  author          String
  body1           String
  body2           String
  highligted_body String
  tags            String[]
  thumbnail_image String
  images          String[]
  created_at      DateTime @default(now())
  updated_at      DateTime @default(now())
}

model ContactUs {
  id         Int      @id @default(autoincrement())
  name       String
  email      String
  subject    String
  body       String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model SiteUseTutotial {
  id         Int      @id @default(autoincrement())
  title      String
  video_link String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model MessageFromFounder {
  id          Int      @id @default(autoincrement())
  name        String
  designation String
  body        String
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
}

model Product {
  id             Int         @id @default(autoincrement())
  title          String
  image          String
  features       String
  subcategory_id Int
  subcategory    SubCategory @relation(fields: [subcategory_id], references: [id])
  created_at     DateTime    @default(now())
  updated_at     DateTime    @default(now())
}

model Category {
  id          Int           @id @default(autoincrement())
  name        String
  subcategory SubCategory[]
  created_at  DateTime      @default(now())
  updated_at  DateTime      @default(now())
}

model SubCategory {
  id          Int       @id @default(autoincrement())
  name        String
  products    Product[]
  category_id Int
  category    Category  @relation(fields: [category_id], references: [id])
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now())
}

